{"version":3,"file":"ng2-completer.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../node_modules/rxjs/src/internal/util/isFunction.ts","../../../node_modules/rxjs/src/internal/util/createErrorClass.ts","../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../../node_modules/rxjs/src/internal/util/arrRemove.ts","../../../node_modules/rxjs/src/internal/Subscription.ts","../../../node_modules/rxjs/src/internal/config.ts","../../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../../../node_modules/rxjs/src/internal/util/noop.ts","../../../node_modules/rxjs/src/internal/util/errorContext.ts","../../../node_modules/rxjs/src/internal/Subscriber.ts","../../../node_modules/rxjs/src/internal/symbol/observable.ts","../../../node_modules/rxjs/src/internal/util/identity.ts","../../../node_modules/rxjs/src/internal/util/pipe.ts","../../../node_modules/rxjs/src/internal/Observable.ts","../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../../node_modules/rxjs/src/internal/Subject.ts","../../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","../../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","../../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../../node_modules/rxjs/src/internal/Scheduler.ts","../../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../../node_modules/rxjs/src/internal/scheduler/async.ts","../../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../../node_modules/rxjs/src/internal/util/isDate.ts","../../../node_modules/rxjs/src/internal/observable/timer.ts","../../../src/globals.ts","../../../src/services/completer-base-data.ts","../../../src/services/local-data.ts","../../../src/services/remote-data.ts","../../../src/services/local-data-factory.ts","../../../src/services/remote-data-factory.ts","../../../src/services/completer-service.ts","../../../src/directives/ctr-completer.ts","../../../src/directives/ctr-dropdown.ts","../../../src/directives/ctr-input.ts","../../../src/directives/ctr-list.ts","../../../src/directives/ctr-row.ts","../../../src/components/completer-list-item-cmp.ts","../../../src/components/completer-cmp.ts","../../../src/modules/ng2-completer.module.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","\r\nexport const MAX_CHARS = 524288;  // the default max length per the html maxlength attribute\r\nexport const MIN_SEARCH_LENGTH = 3;\r\nexport const PAUSE = 10;\r\nexport const TEXT_SEARCHING = \"Searching...\";\r\nexport const TEXT_NO_RESULTS = \"No results found\";\r\nexport const CLEAR_TIMEOUT = 50;\r\n\r\nexport function isNil(value: any) {\r\n    return typeof value === \"undefined\" || value === null;\r\n}\r\n","import { Subject } from \"rxjs\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CompleterData } from \"./completer-data\";\r\nimport { isNil } from \"../globals\";\r\n\r\nexport abstract class CompleterBaseData extends Subject<CompleterItem[] | null> implements CompleterData {\r\n\r\n    protected _searchFields: string | null = null;\r\n    protected _titleField: string | null = null;\r\n    protected _descriptionField: string | undefined = undefined;\r\n    protected _imageField: string | undefined = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public abstract search(term: string): void;\r\n\r\n    public cancel() {\r\n        return;\r\n    }\r\n\r\n    public searchFields(searchFields: string | null) {\r\n        this._searchFields = searchFields;\r\n        return this;\r\n    }\r\n\r\n    public titleField(titleField: string | null) {\r\n        this._titleField = titleField;\r\n        return this;\r\n    }\r\n\r\n    public descriptionField(descriptionField: string) {\r\n        this._descriptionField = descriptionField;\r\n        return this;\r\n    }\r\n\r\n    public imageField(imageField: string) {\r\n        this._imageField = imageField;\r\n        return this;\r\n    }\r\n\r\n    public convertToItem(data: any) {\r\n        let image: string | null = null;\r\n        let formattedText: string;\r\n        let formattedDesc: string | null = null;\r\n\r\n        if (this._titleField) {\r\n            formattedText = this.extractTitle(data);\r\n        } else {\r\n            formattedText = data;\r\n        }\r\n\r\n        if (typeof formattedText !== \"string\") {\r\n            formattedText = JSON.stringify(formattedText);\r\n        }\r\n\r\n        if (this._descriptionField) {\r\n            formattedDesc = this.extractValue(data, this._descriptionField);\r\n        }\r\n\r\n        if (this._imageField) {\r\n            image = this.extractValue(data, this._imageField);\r\n        }\r\n\r\n        if (isNil(formattedText)) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            description: formattedDesc,\r\n            image,\r\n            originalObject: data,\r\n            title: formattedText\r\n        } as CompleterItem;\r\n\r\n    }\r\n\r\n    protected extractMatches(data: any[], term: string) {\r\n        let matches: any[] = [];\r\n        const searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\r\n        if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\r\n            matches = data.filter((item) => {\r\n                const values: any[] = searchFields ? this.extractBySearchFields(searchFields, item) : [item];\r\n                return values.some((value) => value\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .indexOf(term.toString().toLowerCase()) >= 0\r\n                );\r\n            });\r\n        } else {\r\n            matches = data;\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    protected extractTitle(item: any) {\r\n        // split title fields and run extractValue for each and join with ' '\r\n        if (!this._titleField) {\r\n            return \"\";\r\n        }\r\n\r\n        return this._titleField.split(\",\")\r\n            .map((field) => {\r\n                return this.extractValue(item, field);\r\n            })\r\n            .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\r\n    }\r\n\r\n    protected extractValue(obj: any, key: string | null) {\r\n        let keys: string[];\r\n        let result: any;\r\n        if (key) {\r\n            keys = key.split(\".\");\r\n            result = obj;\r\n            for (key of keys) {\r\n                if (result) {\r\n                    result = result[key];\r\n                }\r\n            }\r\n        } else {\r\n            result = obj;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected processResults(matches: string[]): CompleterItem[] {\r\n        let i: number;\r\n        const results: CompleterItem[] = [];\r\n\r\n        if (matches && matches.length > 0) {\r\n            for (i = 0; i < matches.length; i++) {\r\n                const item = this.convertToItem(matches[i]);\r\n                if (item) {\r\n                    results.push(item);\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    private extractBySearchFields(searchFields: string[], item: any) {\r\n        return searchFields\r\n            .map((searchField) => this.extractValue(item, searchField)).filter((value) => !!value);\r\n    }\r\n}\r\n","import { EventEmitter } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\nimport { CompleterBaseData } from \"./completer-base-data\";\r\nimport { CompleterItem } from \"../components/completer-item\";\r\n\r\nexport class LocalData extends CompleterBaseData {\r\n\r\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    protected _data: any[] = [];\r\n    protected savedTerm: string | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public data(data: any[] | Observable<any[]>) {\r\n        if (data instanceof Observable) {\r\n            const data$ = data as Observable<any[]>;\r\n            data$\r\n                .pipe(catchError(() => []))\r\n                .subscribe((res) => {\r\n                    this._data = res;\r\n                    if (this.savedTerm) {\r\n                        this.search(this.savedTerm);\r\n                    }\r\n                    this.dataSourceChange.emit();\r\n                });\r\n        } else {\r\n            this._data = data;\r\n        }\r\n\r\n        this.dataSourceChange.emit();\r\n\r\n        return this;\r\n    }\r\n\r\n    public search(term: string): void {\r\n        if (!this._data) {\r\n            this.savedTerm = term;\r\n        } else {\r\n            this.savedTerm = null;\r\n            const matches: any[] = this.extractMatches(this._data, term);\r\n            this.next(this.processResults(matches));\r\n        }\r\n    }\r\n\r\n    public convertToItem(data: any): CompleterItem | null {\r\n        return super.convertToItem(data);\r\n    }\r\n}\r\n","import { EventEmitter } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\n\r\nimport { CompleterBaseData } from \"./completer-base-data\";\r\nimport { CompleterItem } from \"../components/completer-item\";\r\n\r\nexport class RemoteData extends CompleterBaseData {\r\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    private _remoteUrl: string | null = null;\r\n    private remoteSearch: Subscription | null = null;\r\n    private _urlFormater: ((term: string) => string) | null = null;\r\n    private _dataField: string | null = null;\r\n    private _requestOptions: any;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    public remoteUrl(remoteUrl: string | null) {\r\n        this._remoteUrl = remoteUrl;\r\n        this.dataSourceChange.emit();\r\n\r\n        return this;\r\n    }\r\n\r\n    public urlFormater(urlFormater: (term: string) => string) {\r\n        this._urlFormater = urlFormater;\r\n    }\r\n\r\n    public dataField(dataField: string) {\r\n        this._dataField = dataField;\r\n    }\r\n\r\n    public requestOptions(requestOptions: any) {\r\n        this._requestOptions = requestOptions;\r\n    }\r\n\r\n    public search(term: string): void {\r\n        this.cancel();\r\n        // let params = {};\r\n        let url = \"\";\r\n        if (this._urlFormater) {\r\n            url = this._urlFormater(term);\r\n        } else {\r\n            url = this._remoteUrl + encodeURIComponent(term);\r\n        }\r\n\r\n        this.remoteSearch = this.http\r\n            .get(url, Object.assign({}, this._requestOptions))\r\n            .pipe(\r\n                map((data: any) => {\r\n                    const matches = this.extractValue(data, this._dataField);\r\n                    return this.extractMatches(matches, term);\r\n                }),\r\n                catchError(() => [])\r\n            )\r\n            .subscribe((matches: any[]) => {\r\n                const results = this.processResults(matches);\r\n                this.next(results);\r\n            });\r\n    }\r\n\r\n    public cancel() {\r\n        if (this.remoteSearch) {\r\n            this.remoteSearch.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public convertToItem(data: any): CompleterItem | null {\r\n        return super.convertToItem(data);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { LocalData } from \"./local-data\";\r\n\r\n@Injectable()\r\nexport class LocalDataFactory {\r\n    public create() {\r\n        return new LocalData();\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { RemoteData } from \"./remote-data\";\r\n\r\n@Injectable()\r\nexport class RemoteDataFactory {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public create() {\r\n        return new RemoteData(this.http);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { LocalData } from \"./local-data\";\r\nimport { RemoteData } from \"./remote-data\";\r\nimport { LocalDataFactory } from \"./local-data-factory\";\r\nimport { RemoteDataFactory } from \"./remote-data-factory\";\r\n\r\n@Injectable()\r\nexport class CompleterService {\r\n    constructor(\r\n        private localDataFactory: LocalDataFactory, // Using any instead of () => LocalData because of AoT errors\r\n        private remoteDataFactory: RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\r\n    ) { }\r\n\r\n    public local(\r\n        data: any[] | Observable<any>,\r\n        searchFields: string | null = \"\",\r\n        titleField: string | null = \"\"\r\n    ): LocalData {\r\n\r\n        const localData = this.localDataFactory.create();\r\n        return localData\r\n            .data(data)\r\n            .searchFields(searchFields)\r\n            .titleField(titleField);\r\n    }\r\n\r\n    public remote(url: string | null, searchFields: string | null = \"\", titleField: string | null = \"\"): RemoteData {\r\n\r\n        const remoteData = this.remoteDataFactory.create();\r\n        return remoteData\r\n            .remoteUrl(url)\r\n            .searchFields(searchFields)\r\n            .titleField(titleField);\r\n    }\r\n}\r\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\n\r\nexport interface CompleterList {\r\n    search(term: string): void;\r\n    open(): void;\r\n    isOpen(open: boolean): void;\r\n    clear(): void;\r\n}\r\n\r\nexport interface CompleterDropdown {\r\n    clear(): void;\r\n    selectCurrent(): void;\r\n    nextRow(): void;\r\n    prevRow(): void;\r\n    highlightRow(index: number | null): void;\r\n}\r\n\r\n@Directive({\r\n    selector: \"[ctrCompleter]\",\r\n})\r\nexport class CtrCompleter {\r\n    @Output() public selected = new EventEmitter<CompleterItem | null>();\r\n    @Output() public highlighted = new EventEmitter<CompleterItem | null>();\r\n    @Output() public opened = new EventEmitter<boolean>();\r\n    @Output() public dataSourceChange = new EventEmitter<void>();\r\n\r\n    private list: CompleterList | null = null;\r\n    private dropdown: CompleterDropdown | null = null;\r\n    private _hasHighlighted = false;\r\n    private _hasSelected = false;\r\n    private _cancelBlur = false;\r\n    private _isOpen = false;\r\n    private _autoHighlightIndex: number | null = null;\r\n\r\n    public registerList(list: CompleterList) {\r\n        this.list = list;\r\n    }\r\n\r\n    public registerDropdown(dropdown: CompleterDropdown | null) {\r\n        this.dropdown = dropdown;\r\n    }\r\n\r\n    public onHighlighted(item: CompleterItem | null) {\r\n        this.highlighted.emit(item);\r\n        this._hasHighlighted = !!item;\r\n    }\r\n\r\n    public onSelected(item: CompleterItem | null, clearList = true) {\r\n        this.selected.emit(item);\r\n        if (item) {\r\n            this._hasSelected = true;\r\n        }\r\n        if (clearList) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    public onDataSourceChange() {\r\n        if (this.hasSelected) {\r\n            this.selected.emit(null);\r\n            this._hasSelected = false;\r\n        }\r\n        this.dataSourceChange.emit();\r\n    }\r\n\r\n    public search(term: string) {\r\n        if (this._hasSelected) {\r\n            this.selected.emit(null);\r\n            this._hasSelected = false;\r\n        }\r\n        if (this.list) {\r\n            this.list.search(term);\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        this._hasHighlighted = false;\r\n        this.isOpen = false;\r\n\r\n        if (this.dropdown) {\r\n            this.dropdown.clear();\r\n        }\r\n\r\n        if (this.list) {\r\n            this.list.clear();\r\n        }\r\n    }\r\n\r\n    public selectCurrent() {\r\n        if (this.dropdown) {\r\n            this.dropdown.selectCurrent();\r\n        }\r\n    }\r\n\r\n    public nextRow() {\r\n        if (this.dropdown) {\r\n            this.dropdown.nextRow();\r\n        }\r\n    }\r\n\r\n    public prevRow() {\r\n        if (this.dropdown) {\r\n            this.dropdown.prevRow();\r\n        }\r\n    }\r\n\r\n    public hasHighlighted() {\r\n        return this._hasHighlighted;\r\n    }\r\n\r\n    public cancelBlur(cancel: boolean) {\r\n        this._cancelBlur = cancel;\r\n    }\r\n\r\n    public isCancelBlur() {\r\n        return this._cancelBlur;\r\n    }\r\n\r\n    public open() {\r\n        if (!this._isOpen && !!this.list) {\r\n            this.isOpen = true;\r\n            this.list.open();\r\n        }\r\n    }\r\n\r\n    public get isOpen() {\r\n        return this._isOpen;\r\n    }\r\n\r\n    public set isOpen(open: boolean) {\r\n        this._isOpen = open;\r\n        this.opened.emit(this._isOpen);\r\n        if (this.list) {\r\n            this.list.isOpen(open);\r\n        }\r\n    }\r\n\r\n    public get autoHighlightIndex() {\r\n        return this._autoHighlightIndex;\r\n    }\r\n\r\n    public set autoHighlightIndex(index: number | null) {\r\n        this._autoHighlightIndex = index;\r\n        if (this.dropdown) {\r\n            this.dropdown.highlightRow(this._autoHighlightIndex);\r\n        }\r\n    }\r\n\r\n    public get hasSelected() {\r\n        return this._hasSelected;\r\n    }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Host, HostListener, OnDestroy, NgZone } from \"@angular/core\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CtrCompleter, CompleterDropdown } from \"./ctr-completer\";\r\nimport { isNil } from \"../globals\";\r\n\r\nexport interface CtrRowElement {\r\n    setHighlighted(selected: boolean): void;\r\n    getNativeElement(): any;\r\n    getDataItem(): CompleterItem | null;\r\n}\r\n\r\nexport class CtrRowItem {\r\n    constructor(public row: CtrRowElement, public index: number) { }\r\n}\r\n\r\n@Directive({\r\n    selector: \"[ctrDropdown]\",\r\n})\r\nexport class CtrDropdown implements CompleterDropdown, OnDestroy, AfterViewInit {\r\n\r\n    private rows: CtrRowItem[] = [];\r\n    private currHighlighted: CtrRowItem | undefined;\r\n    private isScrollOn: boolean = false;\r\n    private _rowMouseDown: boolean = false;\r\n\r\n    constructor( @Host() private completer: CtrCompleter, private el: ElementRef, private zone: NgZone) {\r\n        this.completer.registerDropdown(this);\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.completer.registerDropdown(null);\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        const css = getComputedStyle(this.el.nativeElement);\r\n        const autoHighlightIndex = this.completer.autoHighlightIndex;\r\n\r\n        this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\r\n        if (autoHighlightIndex) {\r\n            this.zone.run(\r\n                () => {\r\n                    this.highlightRow(autoHighlightIndex);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\r\n        // Support for canceling blur on IE (issue #158)\r\n        if (!this._rowMouseDown) {\r\n            this.completer.cancelBlur(true);\r\n            this.zone.run(\r\n                () => {\r\n                    this.completer.cancelBlur(false);\r\n                }\r\n            );\r\n        } else {\r\n            this._rowMouseDown = false;\r\n        }\r\n    }\r\n\r\n    public registerRow(row: CtrRowItem) {\r\n        const arrIndex = this.rows.findIndex(_row => _row.index === row.index);\r\n        if (arrIndex >= 0) {\r\n            this.rows[arrIndex] = row;\r\n        } else {\r\n            this.rows.push(row);\r\n        }\r\n    }\r\n\r\n    public unregisterRow(rowIndex: number) {\r\n        const arrIndex = this.rows.findIndex(_row => _row.index === rowIndex);\r\n        this.rows.splice(arrIndex, 1);\r\n        if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\r\n            this.highlightRow(null);\r\n        }\r\n    }\r\n\r\n    public highlightRow(index: number | null) {\r\n        const highlighted = this.rows.find(row => row.index === index);\r\n\r\n        if (isNil(index) || index! < 0) {\r\n            if (this.currHighlighted) {\r\n                this.currHighlighted.row.setHighlighted(false);\r\n            }\r\n            this.currHighlighted = undefined;\r\n            this.completer.onHighlighted(null);\r\n            return;\r\n        }\r\n\r\n        if (!highlighted) {\r\n            return;\r\n        }\r\n\r\n        if (this.currHighlighted) {\r\n            this.currHighlighted.row.setHighlighted(false);\r\n        }\r\n\r\n        this.currHighlighted = highlighted;\r\n        this.currHighlighted.row.setHighlighted(true);\r\n        this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\r\n\r\n        if (this.isScrollOn && this.currHighlighted) {\r\n            const rowTop = this.dropdownRowTop();\r\n\r\n            if (!rowTop) {\r\n                return;\r\n            }\r\n\r\n            if (rowTop < 0) {\r\n                this.dropdownScrollTopTo(rowTop - 1);\r\n            } else {\r\n                const row = this.currHighlighted.row.getNativeElement();\r\n                if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\r\n                    this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\r\n                    if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\r\n                        this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        this.rows = [];\r\n    }\r\n\r\n    public onSelected(item: CompleterItem | null) {\r\n        this.completer.onSelected(item);\r\n    }\r\n\r\n    public rowMouseDown() {\r\n        this._rowMouseDown = true;\r\n    }\r\n\r\n    public selectCurrent() {\r\n        if (!!this.currHighlighted && !!this.currHighlighted.row) {\r\n            this.onSelected(this.currHighlighted.row.getDataItem());\r\n        } else if (this.rows.length > 0) {\r\n            this.onSelected(this.rows[0].row.getDataItem());\r\n        }\r\n\r\n    }\r\n\r\n    public nextRow() {\r\n        let nextRowIndex = 0;\r\n\r\n        if (this.currHighlighted) {\r\n            nextRowIndex = this.currHighlighted.index + 1;\r\n        }\r\n\r\n        this.highlightRow(nextRowIndex);\r\n    }\r\n\r\n    public prevRow() {\r\n        let nextRowIndex = -1;\r\n\r\n        if (this.currHighlighted) {\r\n            nextRowIndex = this.currHighlighted.index - 1;\r\n        }\r\n\r\n        this.highlightRow(nextRowIndex);\r\n    }\r\n\r\n    private dropdownScrollTopTo(offset: any) {\r\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\r\n    }\r\n\r\n    private dropdownRowTop() {\r\n        if (!this.currHighlighted) {\r\n            return;\r\n        }\r\n\r\n        return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\r\n            (this.el.nativeElement.getBoundingClientRect().top +\r\n                parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10));\r\n    }\r\n\r\n    private dropdownHeight() {\r\n        return this.el.nativeElement.getBoundingClientRect().top +\r\n            parseInt(getComputedStyle(this.el.nativeElement).maxHeight as string, 10);\r\n    }\r\n\r\n    private dropdownRowOffsetHeight(row: any) {\r\n        const css = getComputedStyle(row.parentElement);\r\n        return row.parentElement.offsetHeight +\r\n            parseInt(css.marginTop as string, 10) + parseInt(css.marginBottom as string, 10);\r\n    }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Host, HostListener, Input, Output } from \"@angular/core\";\r\nimport { NgModel } from \"@angular/forms\";\r\nimport { Subscription, timer } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CtrCompleter } from \"./ctr-completer\";\r\nimport { isNil } from \"../globals\";\r\n\r\n\r\n// keyboard events\r\nconst KEY_DW = 40;\r\nconst KEY_RT = 39;\r\nconst KEY_UP = 38;\r\nconst KEY_LF = 37;\r\nconst KEY_ES = 27;\r\nconst KEY_EN = 13;\r\nconst KEY_TAB = 9;\r\nconst KEY_BK = 8;\r\nconst KEY_SH = 16;\r\nconst KEY_CL = 20;\r\nconst KEY_F1 = 112;\r\nconst KEY_F12 = 123;\r\n\r\n@Directive({\r\n    selector: \"[ctrInput]\",\r\n})\r\nexport class CtrInput {\r\n    @Input(\"clearSelected\") public clearSelected = false;\r\n    @Input(\"clearUnselected\") public clearUnselected = false;\r\n    @Input(\"overrideSuggested\") public overrideSuggested = false;\r\n    @Input(\"fillHighlighted\") public fillHighlighted = true;\r\n    @Input(\"openOnFocus\") public openOnFocus = false;\r\n    @Input(\"openOnClick\") public openOnClick = false;\r\n    @Input(\"selectOnClick\") public selectOnClick = false;\r\n    @Input(\"selectOnFocus\") public selectOnFocus = false;\r\n\r\n    @Output() public ngModelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    private _searchStr = \"\";\r\n    private _displayStr = \"\";\r\n    private blurTimer: Subscription | null = null;\r\n\r\n    constructor( @Host() private completer: CtrCompleter, private ngModel: NgModel, private el: ElementRef) {\r\n        this.completer.selected.subscribe((item: CompleterItem) => {\r\n            if (!item) {\r\n                return;\r\n            }\r\n            if (this.clearSelected) {\r\n                this.searchStr = \"\";\r\n            } else {\r\n                this.searchStr = item.title;\r\n            }\r\n            this.ngModelChange.emit(this.searchStr);\r\n        });\r\n\r\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\r\n            if (this.fillHighlighted) {\r\n                if (item) {\r\n                    this._displayStr = item.title;\r\n                    this.ngModelChange.emit(item.title);\r\n                } else {\r\n                    this._displayStr = this.searchStr;\r\n                    this.ngModelChange.emit(this.searchStr);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.completer.dataSourceChange.subscribe(() => {\r\n            this.completer.search(this.searchStr);\r\n        });\r\n\r\n        if (this.ngModel.valueChanges) {\r\n            this.ngModel.valueChanges.subscribe((value: any) => {\r\n                if (!isNil(value) && this._displayStr !== value) {\r\n                    if (this.searchStr !== value) {\r\n                        this.completer.search(value);\r\n                    }\r\n                    this.searchStr = value;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    @HostListener(\"keyup\", [\"$event\"])\r\n    public keyupHandler(event: any) {\r\n        if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\r\n            // do nothing\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === KEY_DW) {\r\n            event.preventDefault();\r\n            this.completer.search(this.searchStr);\r\n        } else if (event.keyCode === KEY_ES) {\r\n            if (this.completer.isOpen) {\r\n                this.restoreSearchValue();\r\n                this.completer.clear();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener(\"paste\", [\"$event\"])\r\n    public pasteHandler(event: any) {\r\n        this.completer.open();\r\n    }\r\n\r\n    @HostListener(\"keydown\", [\"$event\"])\r\n    public keydownHandler(event: any) {\r\n        const keyCode = event.keyCode || event.which;\r\n        if (keyCode === KEY_EN) {\r\n            if (this.completer.hasHighlighted()) {\r\n                event.preventDefault();\r\n            }\r\n            this.handleSelection();\r\n        } else if (keyCode === KEY_DW) {\r\n            event.preventDefault();\r\n            this.completer.open();\r\n            this.completer.nextRow();\r\n        } else if (keyCode === KEY_UP) {\r\n            event.preventDefault();\r\n            this.completer.prevRow();\r\n        } else if (keyCode === KEY_TAB) {\r\n            this.handleSelection();\r\n        } else if (keyCode === KEY_BK) {\r\n            this.completer.open();\r\n        } else if (keyCode === KEY_ES) {\r\n            // This is very specific to IE10/11 #272\r\n            // without this, IE clears the input text\r\n            event.preventDefault();\r\n            if (this.completer.isOpen) {\r\n                event.stopPropagation();\r\n            }\r\n        } else {\r\n            if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL &&\r\n                (keyCode <= KEY_F1 || keyCode >= KEY_F12) &&\r\n                !event.ctrlKey && !event.metaKey && !event.altKey\r\n            ) {\r\n                this.completer.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener(\"blur\", [\"$event\"])\r\n    public onBlur(event: any) {\r\n        // Check if we need to cancel Blur for IE\r\n        if (this.completer.isCancelBlur()) {\r\n            setTimeout(\r\n                () => {\r\n                    // get the focus back\r\n                    this.el.nativeElement.focus();\r\n                },\r\n                0\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (this.completer.isOpen) {\r\n            this.blurTimer = timer(200).pipe(take(1)).subscribe(() => this.doBlur());\r\n        }\r\n    }\r\n\r\n    @HostListener(\"focus\", [])\r\n    public onfocus() {\r\n        if (this.blurTimer) {\r\n            this.blurTimer.unsubscribe();\r\n            this.blurTimer = null;\r\n        }\r\n\r\n        if (this.selectOnFocus) {\r\n            this.el.nativeElement.select();\r\n        }\r\n\r\n        if (this.openOnFocus) {\r\n            this.completer.open();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"click\", [\"$event\"])\r\n    public onClick(event: any) {\r\n        if (this.selectOnClick) {\r\n            this.el.nativeElement.select();\r\n        }\r\n\r\n        if (this.openOnClick) {\r\n            if (this.completer.isOpen) {\r\n                this.completer.clear();\r\n            } else {\r\n                this.completer.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get searchStr() {\r\n        return this._searchStr;\r\n    }\r\n\r\n    public set searchStr(term: string) {\r\n        this._searchStr = term;\r\n        this._displayStr = term;\r\n    }\r\n\r\n    private handleSelection() {\r\n        if (this.completer.hasHighlighted()) {\r\n            this._searchStr = \"\";\r\n            this.completer.selectCurrent();\r\n        } else if (this.overrideSuggested) {\r\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\r\n        } else {\r\n            if (this.clearUnselected && !this.completer.hasSelected) {\r\n                this.searchStr = \"\";\r\n                this.ngModelChange.emit(this.searchStr);\r\n            }\r\n            this.completer.clear();\r\n        }\r\n    }\r\n\r\n    private restoreSearchValue() {\r\n        if (this.fillHighlighted) {\r\n            if (this._displayStr !== this.searchStr) {\r\n                this._displayStr = this.searchStr;\r\n                this.ngModelChange.emit(this.searchStr);\r\n            }\r\n        }\r\n    }\r\n\r\n    private doBlur() {\r\n        if (this.blurTimer) {\r\n            this.blurTimer.unsubscribe();\r\n            this.blurTimer = null;\r\n        }\r\n\r\n        if (this.overrideSuggested) {\r\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\r\n        } else {\r\n            if (this.clearUnselected && !this.completer.hasSelected) {\r\n                this.searchStr = \"\";\r\n                this.ngModelChange.emit(this.searchStr);\r\n            } else {\r\n                this.restoreSearchValue();\r\n            }\r\n        }\r\n\r\n        this.completer.clear();\r\n    }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Host,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  NgZone,\r\n} from \"@angular/core\";\r\nimport { Subscription, timer } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CLEAR_TIMEOUT, isNil, MIN_SEARCH_LENGTH, PAUSE } from \"../globals\";\r\nimport { CompleterData } from \"../services/completer-data\";\r\nimport { CompleterList, CtrCompleter } from \"./ctr-completer\";\r\n\r\nexport class CtrListContext {\r\n  constructor(\r\n    public results: CompleterItem[] | null,\r\n    public searching: boolean,\r\n    public searchInitialized: boolean,\r\n    public isOpen: boolean\r\n  ) {}\r\n}\r\n\r\n@Directive({\r\n  selector: \"[ctrList]\",\r\n})\r\nexport class CtrList implements OnInit, CompleterList {\r\n  @Input() public ctrListMinSearchLength = MIN_SEARCH_LENGTH;\r\n  @Input() public ctrListPause = PAUSE;\r\n  @Input() public ctrListAutoMatch = false;\r\n  @Input() public ctrListAutoHighlight = false;\r\n  @Input() public ctrListDisplaySearching = true;\r\n\r\n  private _dataService: CompleterData | null = null;\r\n  // private results: CompleterItem[] = [];\r\n  private term: string | null = null;\r\n  // private searching = false;\r\n  private searchTimer: Subscription | null = null;\r\n  private clearTimer: Subscription | null = null;\r\n  private ctx = new CtrListContext([], false, false, false);\r\n  private _initialValue: any = null;\r\n  private viewRef: EmbeddedViewRef<CtrListContext> | null = null;\r\n\r\n  constructor(\r\n    @Host() private completer: CtrCompleter,\r\n    private templateRef: TemplateRef<CtrListContext>,\r\n    private viewContainer: ViewContainerRef,\r\n    private cd: ChangeDetectorRef,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  public ngOnInit() {\r\n    this.completer.registerList(this);\r\n    this.viewRef = this.viewContainer.createEmbeddedView(\r\n      this.templateRef,\r\n      new CtrListContext([], false, false, false)\r\n    );\r\n  }\r\n\r\n  @Input(\"ctrList\")\r\n  public set dataService(newService: CompleterData) {\r\n    this._dataService = newService;\r\n    this.dataServiceSubscribe();\r\n  }\r\n\r\n  @Input(\"ctrListInitialValue\")\r\n  public set initialValue(value: any) {\r\n    if (\r\n      this._dataService &&\r\n      typeof this._dataService.convertToItem === \"function\"\r\n    ) {\r\n      this.zone.run(() => {\r\n        const initialItem =\r\n          this._dataService && this._dataService.convertToItem!(value);\r\n        if (initialItem) {\r\n          this.completer.onSelected(initialItem, false);\r\n        }\r\n      });\r\n    } else if (!this._dataService) {\r\n      this._initialValue = value;\r\n    }\r\n  }\r\n\r\n  public search(term: string) {\r\n    if (\r\n      !isNil(term) &&\r\n      term.length >= this.ctrListMinSearchLength &&\r\n      this.term !== term\r\n    ) {\r\n      if (this.searchTimer) {\r\n        this.searchTimer.unsubscribe();\r\n        this.searchTimer = null;\r\n      }\r\n      if (!this.ctx.searching) {\r\n        if (this.ctrListDisplaySearching) {\r\n          this.ctx.results = [];\r\n        }\r\n        this.ctx.searching = true;\r\n        this.ctx.searchInitialized = true;\r\n        this.refreshTemplate();\r\n      }\r\n      if (this.clearTimer) {\r\n        this.clearTimer.unsubscribe();\r\n      }\r\n      this.searchTimer = timer(this.ctrListPause)\r\n        .pipe(take(1))\r\n        .subscribe(() => {\r\n          this.searchTimerComplete(term);\r\n        });\r\n    } else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\r\n      this.clear();\r\n      this.term = \"\";\r\n    }\r\n  }\r\n\r\n  public clear() {\r\n    if (this.searchTimer) {\r\n      this.searchTimer.unsubscribe();\r\n    }\r\n    this.clearTimer = timer(CLEAR_TIMEOUT)\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        this._clear();\r\n      });\r\n  }\r\n\r\n  public open() {\r\n    if (!this.ctx.searchInitialized) {\r\n      this.search(\"\");\r\n    }\r\n    this.refreshTemplate();\r\n  }\r\n\r\n  public isOpen(open: boolean) {\r\n    this.ctx.isOpen = open;\r\n  }\r\n\r\n  private _clear() {\r\n    if (this.searchTimer) {\r\n      this.searchTimer.unsubscribe();\r\n      this.searchTimer = null;\r\n    }\r\n    if (this.dataService) {\r\n      this.dataService.cancel();\r\n    }\r\n\r\n    this.viewContainer.clear();\r\n    this.viewRef = null;\r\n  }\r\n\r\n  private searchTimerComplete(term: string) {\r\n    // Begin the search\r\n    if (isNil(term) || term.length < this.ctrListMinSearchLength) {\r\n      this.ctx.searching = false;\r\n      return;\r\n    }\r\n    this.term = term;\r\n\r\n    if (this._dataService) {\r\n      this._dataService.search(term);\r\n    }\r\n  }\r\n\r\n  private refreshTemplate() {\r\n    // create the template if it doesn't exist\r\n    if (!this.viewRef) {\r\n      this.viewRef = this.viewContainer.createEmbeddedView(\r\n        this.templateRef,\r\n        this.ctx\r\n      );\r\n    } else if (!this.viewRef.destroyed) {\r\n      // refresh the template\r\n      this.viewRef!.context.isOpen = this.ctx.isOpen;\r\n      this.viewRef!.context.results = this.ctx.results;\r\n      this.viewRef!.context.searching = this.ctx.searching;\r\n      this.viewRef!.context.searchInitialized = this.ctx.searchInitialized;\r\n      this.viewRef.detectChanges();\r\n    }\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  private getBestMatchIndex() {\r\n    if (!this.ctx.results || !this.term) {\r\n      return null;\r\n    }\r\n\r\n    // First try to find the exact term\r\n    let bestMatch = this.ctx.results.findIndex(\r\n      (item) => item.title.toLowerCase() === this.term!.toLocaleLowerCase()\r\n    );\r\n    // If not try to find the first item that starts with the term\r\n    if (bestMatch < 0) {\r\n      bestMatch = this.ctx.results.findIndex((item) =>\r\n        item.title.toLowerCase().startsWith(this.term!.toLocaleLowerCase())\r\n      );\r\n    }\r\n    // If not try to find the first item that includes the term\r\n    if (bestMatch < 0) {\r\n      bestMatch = this.ctx.results.findIndex((item) =>\r\n        item.title.toLowerCase().includes(this.term!.toLocaleLowerCase())\r\n      );\r\n    }\r\n\r\n    return bestMatch < 0 ? null : bestMatch;\r\n  }\r\n\r\n  private dataServiceSubscribe() {\r\n    if (this._dataService) {\r\n      this._dataService.subscribe(\r\n        (results) => {\r\n          this.ctx.searchInitialized = true;\r\n          this.ctx.searching = false;\r\n          this.ctx.results = results;\r\n\r\n          if (\r\n            this.ctrListAutoMatch &&\r\n            results &&\r\n            results.length === 1 &&\r\n            results[0].title &&\r\n            !isNil(this.term) &&\r\n            results[0].title.toLocaleLowerCase() ===\r\n              this.term!.toLocaleLowerCase()\r\n          ) {\r\n            // Do automatch\r\n            this.completer.onSelected(results[0]);\r\n            return;\r\n          }\r\n\r\n          this.refreshTemplate();\r\n\r\n          if (this.ctrListAutoHighlight) {\r\n            this.completer.autoHighlightIndex = this.getBestMatchIndex();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // tslint:disable-next-line:no-console\r\n          console.error(error);\r\n          // tslint:disable-next-line:no-console\r\n          console.error(\r\n            \"Unexpected error in dataService: errors should be handled by the dataService Observable\"\r\n          );\r\n          return [];\r\n        }\r\n      );\r\n\r\n      if (this._dataService.dataSourceChange) {\r\n        this._dataService.dataSourceChange.subscribe(() => {\r\n          this.term = null;\r\n          this.ctx.searchInitialized = false;\r\n          this.ctx.searching = false;\r\n          this.ctx.results = [];\r\n          this.refreshTemplate();\r\n          this.completer.onDataSourceChange();\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Host, HostListener, Input, Renderer2, OnDestroy } from \"@angular/core\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CtrDropdown, CtrRowElement, CtrRowItem } from \"./ctr-dropdown\";\r\n\r\n@Directive({\r\n    selector: \"[ctrRow]\",\r\n})\r\nexport class CtrRow implements CtrRowElement, OnDestroy {\r\n\r\n    private selected = false;\r\n    private _rowIndex: number = 0;\r\n    private _item: CompleterItem | null = null;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2, @Host() private dropdown: CtrDropdown) { }\r\n\r\n    public ngOnDestroy() {\r\n        if (this._rowIndex) {\r\n            this.dropdown.unregisterRow(this._rowIndex);\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    set ctrRow(index: number) {\r\n        this._rowIndex = index;\r\n        this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\r\n    }\r\n\r\n    @Input()\r\n    set dataItem(item: CompleterItem) {\r\n        this._item = item;\r\n    }\r\n\r\n    @HostListener(\"click\", [\"$event\"]) public onClick(event: any) {\r\n        this.dropdown.onSelected(this._item);\r\n    }\r\n\r\n    @HostListener(\"mouseenter\", [\"$event\"]) public onMouseEnter(event: any) {\r\n        this.dropdown.highlightRow(this._rowIndex);\r\n    }\r\n\r\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\r\n        this.dropdown.rowMouseDown();\r\n    }\r\n\r\n    public setHighlighted(selected: boolean) {\r\n        this.selected = selected;\r\n        if (this.selected) {\r\n          this.renderer.addClass(this.el.nativeElement, \"completer-selected-row\");\r\n        } else {\r\n          this.renderer.removeClass(this.el.nativeElement, \"completer-selected-row\");\r\n        }\r\n    }\r\n\r\n    public getNativeElement() {\r\n        return this.el.nativeElement;\r\n    }\r\n\r\n    public getDataItem() {\r\n        return this._item;\r\n    }\r\n}\r\n","\"use strict\";\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\n\r\nexport interface MatchPart {\r\n    isMatch: boolean;\r\n    text: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"completer-list-item\",\r\n    template: `<span class=\"completer-list-item-holder\" [ngClass]= \"{'completer-title': type === 'title', 'completer-description': type === 'description'}\" >\r\n        <span class=\"completer-list-item\" *ngFor=\"let part of parts\" [ngClass]= \"part.isMatch ? matchClass : null\">{{part.text}}</span>\r\n    </span>`\r\n})\r\nexport class CompleterListItemCmp implements OnInit {\r\n    @Input()\r\n    public text: string = \"\";\r\n    @Input()\r\n    public searchStr: string = \"\";\r\n    @Input()\r\n    public matchClass: string = \"\";\r\n    @Input()\r\n    public type: string = \"\";\r\n\r\n    public parts: MatchPart[] = [];\r\n    public ngOnInit() {\r\n        if (!this.searchStr) {\r\n            this.parts.push({ isMatch: false, text: this.text });\r\n            return;\r\n        }\r\n        const matchStr = this.text.toLowerCase();\r\n        let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\r\n        let startIndex = 0;\r\n        while (matchPos >= 0) {\r\n            const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\r\n            if (matchPos === 0) {\r\n                this.parts.push({ isMatch: true, text: matchText });\r\n                startIndex += this.searchStr.length;\r\n            } else if (matchPos > 0) {\r\n                const matchPart = this.text.slice(startIndex, matchPos);\r\n                this.parts.push({ isMatch: false, text: matchPart });\r\n                this.parts.push({ isMatch: true, text: matchText });\r\n                startIndex += this.searchStr.length + matchPart.length;\r\n            }\r\n            matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\r\n        }\r\n        if (startIndex < this.text.length) {\r\n            this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\r\n        }\r\n    }\r\n}","\"use strict\";\r\nimport { AfterViewChecked, ChangeDetectorRef, Component, Input, Output, EventEmitter, OnInit, ViewChild, forwardRef, AfterViewInit, ElementRef } from \"@angular/core\";\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\nimport { CtrCompleter } from \"../directives/ctr-completer\";\r\nimport { CompleterData } from \"../services/completer-data\";\r\nimport { CompleterService } from \"../services/completer-service\";\r\nimport { CompleterItem } from \"./completer-item\";\r\nimport { MAX_CHARS, MIN_SEARCH_LENGTH, PAUSE, TEXT_SEARCHING, TEXT_NO_RESULTS, isNil } from \"../globals\";\r\n\r\n\r\nconst noop = () => {\r\n    return;\r\n};\r\n\r\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\r\n    multi: true,\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CompleterCmp),\r\n};\r\n\r\n\r\n@Component({\r\n    selector: \"ng2-completer\",\r\n    template: `\r\n        <div class=\"completer-holder\" ctrCompleter>\r\n            <input #ctrInput [attr.id]=\"inputId.length > 0 ? inputId : null\" type=\"search\"\r\n                class=\"completer-input\" ctrInput [ngClass]=\"inputClass\"\r\n                [(ngModel)]=\"searchStr\" (ngModelChange)=\"onChange($event)\"\r\n                [attr.name]=\"inputName\" [placeholder]=\"placeholder\"\r\n                [attr.maxlength]=\"maxChars\" [tabindex]=\"fieldTabindex\" [disabled]=\"disableInput\"\r\n                [clearSelected]=\"clearSelected\" [clearUnselected]=\"clearUnselected\"\r\n                [overrideSuggested]=\"overrideSuggested\" [openOnFocus]=\"openOnFocus\" [fillHighlighted]=\"fillHighlighted\"\r\n                [openOnClick]=\"openOnClick\" [selectOnClick]=\"selectOnClick\" [selectOnFocus]=\"selectOnFocus\"\r\n                (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"onKeyup($event)\"\r\n                (keydown)=\"onKeydown($event)\" (click)=\"onClick($event)\"\r\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" />\r\n\r\n            <div class=\"completer-dropdown-holder\"\r\n                *ctrList=\"dataService;\r\n                    minSearchLength: minSearchLength;\r\n                    pause: pause;\r\n                    autoMatch: autoMatch;\r\n                    initialValue: initialValue;\r\n                    autoHighlight: autoHighlight;\r\n                    displaySearching: displaySearching;\r\n                    let items = results;\r\n                    let searchActive = searching;\r\n                    let isInitialized = searchInitialized;\r\n                    let isOpen = isOpen;\">\r\n                <div class=\"completer-dropdown\" ctrDropdown\r\n                    *ngIf=\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\">\r\n                    <div *ngIf=\"searchActive && displaySearching\" class=\"completer-searching\">{{ _textSearching }}</div>\r\n                    <div *ngIf=\"!searchActive && (!items || items?.length === 0)\"\r\n                    class=\"completer-no-results\">{{ _textNoResults }}</div>\r\n                    <div class=\"completer-row-wrapper\" *ngFor=\"let item of items; let rowIndex=index\">\r\n                        <div class=\"completer-row\" [ctrRow]=\"rowIndex\" [dataItem]=\"item\">\r\n                            <div *ngIf=\"item.image || item.image === ''\" class=\"completer-image-holder\">\r\n                                <img *ngIf=\"item.image != ''\" src=\"{{item.image}}\" class=\"completer-image\" />\r\n                                <div *ngIf=\"item.image === ''\" class=\"completer-image-default\"></div>\r\n                            </div>\r\n                            <div class=\"completer-item-text\"\r\n                            [ngClass]=\"{'completer-item-text-image': item.image || item.image === '' }\">\r\n                                <completer-list-item\r\n                                class=\"completer-title\" [text]=\"item.title\" [matchClass]=\"matchClass\"\r\n                                [searchStr]=\"searchStr\" [type]=\"'title'\"></completer-list-item>\r\n                                <completer-list-item *ngIf=\"item.description && item.description != ''\"\r\n                                class=\"completer-description\" [text]=\"item.description\"\r\n                                    [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'description'\">\r\n                                </completer-list-item>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n    .completer-dropdown {\r\n        border-color: #ececec;\r\n        border-width: 1px;\r\n        border-style: solid;\r\n        border-radius: 2px;\r\n        width: 250px;\r\n        padding: 6px;\r\n        cursor: pointer;\r\n        z-index: 9999;\r\n        position: absolute;\r\n        margin-top: -6px;\r\n        background-color: #ffffff;\r\n    }\r\n\r\n    .completer-row {\r\n        padding: 5px;\r\n        color: #000000;\r\n        margin-bottom: 4px;\r\n        clear: both;\r\n        display: inline-block;\r\n        width: 103%;\r\n    }\r\n\r\n    .completer-selected-row {\r\n        background-color: lightblue;\r\n        color: #ffffff;\r\n    }\r\n\r\n    .completer-description {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .completer-image-default {\r\n        width: 16px;\r\n        height: 16px;\r\n        background-image: url(\"demo/res/img/default.png\");\r\n    }\r\n\r\n    .completer-image-holder {\r\n        float: left;\r\n        width: 10%;\r\n    }\r\n    .completer-item-text-image {\r\n        float: right;\r\n        width: 90%;\r\n    }\r\n    `],\r\n    providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class CompleterCmp implements ControlValueAccessor, AfterViewChecked, AfterViewInit {\r\n    @Input() public dataService: CompleterData | undefined;\r\n    @Input() public inputName = \"\";\r\n    @Input() public inputId: string = \"\";\r\n    @Input() public pause = PAUSE;\r\n    @Input() public minSearchLength = MIN_SEARCH_LENGTH;\r\n    @Input() public maxChars = MAX_CHARS;\r\n    @Input() public overrideSuggested = false;\r\n    @Input() public clearSelected = false;\r\n    @Input() public clearUnselected = false;\r\n    @Input() public fillHighlighted = true;\r\n    @Input() public placeholder = \"\";\r\n    @Input() public matchClass: string | undefined;\r\n    @Input() public fieldTabindex: number | undefined;\r\n    @Input() public autoMatch = false;\r\n    @Input() public disableInput = false;\r\n    @Input() public inputClass: string | undefined;\r\n    @Input() public autofocus = false;\r\n    @Input() public openOnFocus = false;\r\n    @Input() public openOnClick = false;\r\n    @Input() public selectOnClick = false;\r\n    @Input() public selectOnFocus = false;\r\n    @Input() public initialValue: any;\r\n    @Input() public autoHighlight = false;\r\n\r\n    @Output() public selected = new EventEmitter<CompleterItem>();\r\n    @Output() public highlighted = new EventEmitter<CompleterItem>();\r\n    @Output(\"blur\") public blurEvent = new EventEmitter<void>();\r\n    @Output() public click = new EventEmitter<void>();\r\n    @Output(\"focus\") public focusEvent = new EventEmitter<void>();\r\n    @Output() public opened = new EventEmitter<boolean>();\r\n    @Output() public keyup: EventEmitter<any> = new EventEmitter();\r\n    @Output() public keydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(CtrCompleter, { static: false }) public completer: CtrCompleter | undefined;\r\n    @ViewChild(\"ctrInput\", { static: false }) public ctrInput: ElementRef | undefined;\r\n\r\n    public control = new FormControl(\"\");\r\n    public displaySearching = true;\r\n    public displayNoResults = true;\r\n    public _textNoResults = TEXT_NO_RESULTS;\r\n    public _textSearching = TEXT_SEARCHING;\r\n\r\n    private _onTouchedCallback: () => void = noop;\r\n    private _onChangeCallback: (_: any) => void = noop;\r\n    private _focus: boolean = false;\r\n    private _open: boolean = false;\r\n    private _searchStr = \"\";\r\n\r\n    constructor(private completerService: CompleterService, private cdr: ChangeDetectorRef) { }\r\n\r\n    public get value(): any { return this.searchStr; };\r\n\r\n    public set value(v: any) {\r\n        if (v !== this.searchStr) {\r\n            this.searchStr = v;\r\n        }\r\n        // Propagate the change in any case\r\n        this._onChangeCallback(v);\r\n    }\r\n\r\n    public get searchStr() {\r\n        return this._searchStr;\r\n    }\r\n\r\n    public set searchStr(value: string) {\r\n        if (typeof value === \"string\" || isNil(value)) {\r\n            this._searchStr = value;\r\n        } else {\r\n            this._searchStr = JSON.stringify(value);\r\n        }\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        if (this.autofocus) {\r\n            this._focus = true;\r\n        }\r\n        \r\n        if (!this.completer) {\r\n            return;\r\n        }\r\n\r\n        this.completer.selected.subscribe((item: CompleterItem) => {\r\n            this.selected.emit(item);\r\n        });\r\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\r\n            this.highlighted.emit(item);\r\n        });\r\n        this.completer.opened.subscribe((isOpen: boolean) => {\r\n            this._open = isOpen;\r\n            this.opened.emit(isOpen);\r\n        });\r\n    }\r\n\r\n    public ngAfterViewChecked(): void {\r\n        if (this._focus) {\r\n            setTimeout(\r\n                () => {\r\n                    if (!!this.ctrInput) {\r\n                        this.ctrInput.nativeElement.focus();\r\n                        this._focus = false;\r\n                    }\r\n                },\r\n                0\r\n            );\r\n        }\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(value: any) {\r\n        this.searchStr = value;\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    public setDisabledState(isDisabled: boolean): void {\r\n        this.disableInput = isDisabled;\r\n    }\r\n\r\n    @Input()\r\n    public set datasource(source: CompleterData | string | any[]) {\r\n        if (source) {\r\n            if (source instanceof Array) {\r\n                this.dataService = this.completerService.local(source);\r\n            } else if (typeof (source) === \"string\") {\r\n                this.dataService = this.completerService.remote(source);\r\n            } else {\r\n                this.dataService = source as CompleterData;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set textNoResults(text: string) {\r\n        if (this._textNoResults !== text) {\r\n            this._textNoResults = text;\r\n            this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set textSearching(text: string) {\r\n        if (this._textSearching !== text) {\r\n            this._textSearching = text;\r\n            this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\r\n        }\r\n    }\r\n\r\n    public onBlur() {\r\n        this.blurEvent.emit();\r\n        this.onTouched();\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    public onFocus() {\r\n        this.focusEvent.emit();\r\n        this.onTouched();\r\n    }\r\n\r\n    public onClick(event: any) {\r\n        this.click.emit(event);\r\n        this.onTouched();\r\n    }\r\n\r\n    public onKeyup(event: any) {\r\n        this.keyup.emit(event);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    public onKeydown(event: any) {\r\n        this.keydown.emit(event);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    public onChange(value: string) {\r\n        this.value = value;\r\n    }\r\n\r\n    public open() {\r\n        if (!this.completer) {\r\n            return;\r\n        }\r\n\r\n        this.completer.open();\r\n    }\r\n\r\n    public close() {\r\n        if (!this.completer) {\r\n            return;\r\n        }\r\n\r\n        this.completer.clear();\r\n    }\r\n\r\n    public focus(): void {\r\n        if (this.ctrInput) {\r\n            this.ctrInput.nativeElement.focus();\r\n        } else {\r\n            this._focus = true;\r\n        }\r\n    }\r\n\r\n    public blur(): void {\r\n        if (this.ctrInput) {\r\n            this.ctrInput.nativeElement.blur();\r\n        } else {\r\n            this._focus = false;\r\n        }\r\n    }\r\n\r\n    public isOpen() {\r\n        return this._open;\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { CompleterCmp } from \"../components/completer-cmp\";\r\nimport { CompleterListItemCmp } from \"../components/completer-list-item-cmp\";\r\nimport { LocalDataFactory } from \"../services/local-data-factory\";\r\nimport { RemoteDataFactory } from \"../services/remote-data-factory\";\r\nimport { CompleterService } from \"../services/completer-service\";\r\n\r\nimport { CtrCompleter } from \"../directives/ctr-completer\";\r\nimport { CtrDropdown } from \"../directives/ctr-dropdown\";\r\nimport { CtrInput } from \"../directives/ctr-input\";\r\nimport { CtrList } from \"../directives/ctr-list\";\r\nimport { CtrRow } from \"../directives/ctr-row\";\r\n\r\nconst providers = [\r\n    CompleterService,\r\n    LocalDataFactory,\r\n    RemoteDataFactory\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CompleterListItemCmp,\r\n        CtrCompleter,\r\n        CtrDropdown,\r\n        CtrInput,\r\n        CtrList,\r\n        CtrRow,\r\n        CompleterCmp\r\n    ],\r\n    exports: [\r\n        CompleterListItemCmp,\r\n        CtrCompleter,\r\n        CtrDropdown,\r\n        CtrInput,\r\n        CtrList,\r\n        CtrRow,\r\n        CompleterCmp\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    providers\r\n})\r\nexport class Ng2CompleterModule {\r\n\r\n    public static forRoot(): ModuleWithProviders<Ng2CompleterModule> {\r\n        return {\r\n            ngModule: Ng2CompleterModule,\r\n            providers\r\n        };\r\n    }\r\n\r\n    public static forChild(): ModuleWithProviders<Ng2CompleterModule> {\r\n        return {\r\n            ngModule: Ng2CompleterModule,\r\n            providers\r\n        };\r\n    }\r\n}\r\n"],"names":["Symbol_observable","EventEmitter","catchError","map","Injectable","Directive","Output","Host","HostListener","take","Input","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","Component","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","noop","NG_VALUE_ACCESSOR","forwardRef","FormControl","i0.ɵɵlistener","i0.ɵɵattribute","ViewChild","CommonModule","FormsModule","NgModule"],"mappings":"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"}